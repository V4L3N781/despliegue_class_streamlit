# -*- coding: utf-8 -*-
"""Copia de Despliegue.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dXfXX_GsHcsRxNjZZ7g1T3WJyKnMiHkR

# Despliegue

- Cargamos el modelo
- Cargamos los datos futuros
- Preparar los datos futuros
- Aplicamos el modelo para la predicción
"""

#Cargamos librerías principales
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

#Cargamos el modelo
import pickle
filename = 'modelo-class.pkl'
modelTree,labelencoder,variables= pickle.load(open(filename, 'rb'))

#Cargamos los datos futuros
# data = pd.read_csv("carRisk-future.csv")
# data.head()

#Interfaz grafica
#Se crea interfaz gráfica con streamlit para captura de los datos

import streamlit as st

st.title('Predicción carros')

age = st.slider('age', min_value=14, max_value=52, value=20, step=1)
cartype = st.selectbox('car_type', ['family', 'combi','sport','minivan'])


#Dataframe
datos = [[age, cartype]]
data = pd.DataFrame(datos, columns=['age', 'cartype']) #Dataframe con los mismos nombres de variables
data.head()

#Se realiza la preparación
data_preparada=data.copy()

#En despliegue drop_first= False
data_preparada = pd.get_dummies(data_preparada, columns=['cartype'], drop_first=False, dtype=int)
data_preparada.head()

#Se adicionan las columnas faltantes
data_preparada=data_preparada.reindex(columns=variables,fill_value=0)
data_preparada.head()

#Se normaliza la edad para predecir con Knn, Red
#En los despliegues no se llama fit
#data_preparada[['Edad']]= min_max_scaler.transform(data_preparada[['Edad']])
#data_preparada.head()

"""#Predicciones

**El modelo presenta un error de**
"""

#Hacemos la predicción con el Tree
Y_pred = modelTree.predict(data_preparada)
print(Y_pred)

data['Prediccion']=labelencoder.inverse_transform(Y_pred)
data.head()

data